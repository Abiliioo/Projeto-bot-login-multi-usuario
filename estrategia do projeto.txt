Para começar, que tal definirmos uma estratégia de revisão? Minha sugestão é seguir esta abordagem:

Revisão de Arquitetura:

Verificar a estrutura dos diretórios e organização de arquivos para garantir clareza e facilidade de manutenção.
Avaliar se há melhorias no uso de Flask para otimizar rotas, modelos e views.
Segurança e Autenticação:

Revisar a implementação de autenticação de usuários e o sistema de gerenciamento de assinaturas.
Certificar que os tokens e sessões estão sendo tratados de forma segura.
Banco de Dados:

Avaliar a estrutura de modelos e a maneira como as interações com o banco de dados estão ocorrendo.
Otimizar queries e verificar a integração do sistema de armazenamento de projetos para cada usuário.
Front-end:

Melhorar o layout e responsividade com Bootstrap, tornando a experiência do usuário mais fluida.
Revisar formulários, validações e mensagens de erro.
Bot e Integração com o 99Freelas:

Certificar que o bot está funcionando conforme esperado e otimizar a lógica de verificação de projetos.
Melhorar a lógica de verificação de duplicações e performance de scraping com aiohttp.
Testes e Deploy:

Implementar ou revisar os testes existentes, garantindo que cada funcionalidade esteja coberta.
Verificar a configuração do Heroku, analisar logs e otimizar para performance e escalabilidade.